{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Resources": {
      "vpcc2a53da4": {
        "Type": "AWS::EC2::VPC",
        "Properties": {
          "CidrBlock": "172.17.0.0/16",
          "InstanceTenancy": "default",
          "EnableDnsSupport": "true",
          "EnableDnsHostnames": "true",
          "Tags": [
            {
              "Key": "Name",
              "Value": "mscott-dev"
            }
          ]
        }
      },
      "subnet6f866635": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "CidrBlock": "172.17.1.0/24",
          "AvailabilityZone": "eu-west-1a",
          "VpcId": {
            "Ref": "vpcc2a53da4"
          },
          "Tags": [
            {
              "Key": "Name",
              "Value": "Public subnet"
            }
          ]
        }
      },
      "subnet038c6c59": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "CidrBlock": "172.17.2.0/24",
          "AvailabilityZone": "eu-west-1a",
          "VpcId": {
            "Ref": "vpcc2a53da4"
          },
          "Tags": [
            {
              "Key": "Name",
              "Value": "Private subnet"
            }
          ]
        }
      },
      "igwc54531a2": {
        "Type": "AWS::EC2::InternetGateway",
        "Properties": {
        }
      },
      "dopt7f4fa019": {
        "Type": "AWS::EC2::DHCPOptions",
        "Properties": {
          "DomainName": "eu-west-1.compute.internal",
          "DomainNameServers": [
            "AmazonProvidedDNS"
          ]
        }
      },
      "acl38b5a05e": {
        "Type": "AWS::EC2::NetworkAcl",
        "Properties": {
          "VpcId": {
            "Ref": "vpcc2a53da4"
          }
        }
      },
      "rtbad2f9cd4": {
        "Type": "AWS::EC2::RouteTable",
        "Properties": {
          "VpcId": {
            "Ref": "vpcc2a53da4"
          }
        }
      },
      "rtbc62d9ebf": {
        "Type": "AWS::EC2::RouteTable",
        "Properties": {
          "VpcId": {
            "Ref": "vpcc2a53da4"
          }
        }
      },
      "eip34246100215": {
        "Type": "AWS::EC2::EIP",
        "DependsOn": [
          "gw1"
        ],
        "Properties": {
          "Domain": "vpc"
        }
      },
      "instancei02dcf15c493ef93f1": {
        "Type": "AWS::EC2::Instance",
        "Properties": {
          "DisableApiTermination": "false",
          "InstanceInitiatedShutdownBehavior": "stop",
          "ImageId": "ami-f90a4880",
          "InstanceType": "t2.micro",
          "KeyName": "mscott-automate",
          "Monitoring": "false",
          "Tags": [
            {
              "Key": "Name",
              "Value": "node1-ubuntu"
            }
          ],
          "NetworkInterfaces": [
            {
              "DeleteOnTermination": "true",
              "Description": "Primary network interface",
              "DeviceIndex": 0,
              "SubnetId": {
                "Ref": "subnet038c6c59"
              },
              "PrivateIpAddresses": [
                {
                  "PrivateIpAddress": "172.17.2.112",
                  "Primary": "true"
                }
              ],
              "GroupSet": [
                {
                  "Ref": "sga2nodes"
                }
              ]
            }
          ]
        }
      },
      "instancei0e8a66b56b7fb9678": {
        "Type": "AWS::EC2::Instance",
        "Properties": {
          "DisableApiTermination": "false",
          "InstanceInitiatedShutdownBehavior": "stop",
          "ImageId": "ami-f90a4880",
          "InstanceType": "t2.medium",
          "KeyName": "mscott-automate",
          "Monitoring": "false",
          "Tags": [
            {
              "Key": "Name",
              "Value": "Automate2"
            }
          ],
          "NetworkInterfaces": [
            {
              "DeleteOnTermination": "true",
              "Description": "Primary network interface",
              "DeviceIndex": 0,
              "SubnetId": {
                "Ref": "subnet038c6c59"
              },
              "PrivateIpAddresses": [
                {
                  "PrivateIpAddress": "172.17.2.200",
                  "Primary": "true"
                }
              ],
              "GroupSet": [
                {
                  "Ref": "sgautomate2"
                }
              ]
            }
          ]
        }
      },
      "instancei0f8198193d09e6445": {
        "Type": "AWS::EC2::Instance",
        "Properties": {
          "DisableApiTermination": "false",
          "InstanceInitiatedShutdownBehavior": "stop",
          "ImageId": "ami-f90a4880",
          "InstanceType": "t2.medium",
          "KeyName": "mscott-automate",
          "Monitoring": "false",
          "Tags": [
            {
              "Key": "Name",
              "Value": "Chef Server"
            }
          ],
          "NetworkInterfaces": [
            {
              "DeleteOnTermination": "true",
              "Description": "Primary network interface",
              "DeviceIndex": 0,
              "SubnetId": {
                "Ref": "subnet038c6c59"
              },
              "PrivateIpAddresses": [
                {
                  "PrivateIpAddress": "172.17.2.60",
                  "Primary": "true"
                }
              ],
              "GroupSet": [
                {
                  "Ref": "sgChefServer"
                }
              ]
            }
          ]
        }
      },
      "instancei0986cb9e5080b9f22": {
        "Type": "AWS::EC2::Instance",
        "Properties": {
          "DisableApiTermination": "false",
          "InstanceInitiatedShutdownBehavior": "stop",
          "ImageId": "ami-6975eb1e",
          "InstanceType": "t2.micro",
          "KeyName": "mscott-automate",
          "Monitoring": "false",
          "Tags": [
            {
              "Key": "Name",
              "Value": "mscott VPC NAT"
            }
          ],
          "NetworkInterfaces": [
            {
              "DeleteOnTermination": "true",
              "DeviceIndex": 0,
              "SubnetId": {
                "Ref": "subnet6f866635"
              },
              "PrivateIpAddresses": [
                {
                  "PrivateIpAddress": "172.17.1.90",
                  "Primary": "true"
                }
              ],
              "GroupSet": [
                {
                  "Ref": "sgdefault"
                }
              ]
            }
          ]
        }
      },
      "sgmscottautomate": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "This security group was generated by AWS Marketplace and is based on recommended settings for Chef Automate (First 10 nodes free) version 1.8.32 provided by Chef",
          "VpcId": "vpc-a79510c1"
        }
      },
      "sgdefault": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "default VPC security group",
          "VpcId": {
            "Ref": "vpcc2a53da4"
          },
          "Tags": [
            {
              "Key": "Name",
              "Value": "mscott-dev vpc"
            }
          ]
        }
      },
      "sgChefServer": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "Chef server",
          "VpcId": {
            "Ref": "vpcc2a53da4"
          }
        }
      },
      "sgautomate2": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "Automate2 and Chef server security group",
          "VpcId": {
            "Ref": "vpcc2a53da4"
          }
        }
      },
      "sga2nodes": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "launch-wizard-1 created 2018-04-20T09:25:15.394+01:00",
          "VpcId": {
            "Ref": "vpcc2a53da4"
          }
        }
      },
      "sgmscottnode": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "launch-wizard-1 created 2018-04-17T10:09:22.141+01:00",
          "VpcId": "vpc-a79510c1"
        }
      },
      "acl1": {
        "Type": "AWS::EC2::NetworkAclEntry",
        "Properties": {
          "CidrBlock": "0.0.0.0/0",
          "Egress": "true",
          "Protocol": "-1",
          "RuleAction": "allow",
          "RuleNumber": "100",
          "NetworkAclId": {
            "Ref": "acl38b5a05e"
          }
        }
      },
      "acl2": {
        "Type": "AWS::EC2::NetworkAclEntry",
        "Properties": {
          "CidrBlock": "0.0.0.0/0",
          "Protocol": "-1",
          "RuleAction": "allow",
          "RuleNumber": "100",
          "NetworkAclId": {
            "Ref": "acl38b5a05e"
          }
        }
      },
      "subnetacl1": {
        "Type": "AWS::EC2::SubnetNetworkAclAssociation",
        "Properties": {
          "NetworkAclId": {
            "Ref": "acl38b5a05e"
          },
          "SubnetId": {
            "Ref": "subnet038c6c59"
          }
        }
      },
      "subnetacl2": {
        "Type": "AWS::EC2::SubnetNetworkAclAssociation",
        "Properties": {
          "NetworkAclId": {
            "Ref": "acl38b5a05e"
          },
          "SubnetId": {
            "Ref": "subnet6f866635"
          }
        }
      },
      "gw1": {
        "Type": "AWS::EC2::VPCGatewayAttachment",
        "Properties": {
          "VpcId": {
            "Ref": "vpcc2a53da4"
          },
          "InternetGatewayId": {
            "Ref": "igwc54531a2"
          }
        }
      },
      "subnetroute2": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "RouteTableId": {
            "Ref": "rtbc62d9ebf"
          },
          "SubnetId": {
            "Ref": "subnet6f866635"
          }
        }
      },
      "route1": {
        "Type": "AWS::EC2::Route",
        "Properties": {
          "DestinationCidrBlock": "0.0.0.0/0",
          "RouteTableId": {
            "Ref": "rtbad2f9cd4"
          },
          "InstanceId": {
            "Ref": "instancei0986cb9e5080b9f22"
          }
        }
      },
      "route2": {
        "Type": "AWS::EC2::Route",
        "Properties": {
          "DestinationCidrBlock": "0.0.0.0/0",
          "RouteTableId": {
            "Ref": "rtbc62d9ebf"
          },
          "GatewayId": {
            "Ref": "igwc54531a2"
          }
        },
        "DependsOn": "gw1"
      },
      "dchpassoc1": {
        "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
        "Properties": {
          "VpcId": {
            "Ref": "vpcc2a53da4"
          },
          "DhcpOptionsId": {
            "Ref": "dopt7f4fa019"
          }
        }
      },
      "assoc1": {
        "Type": "AWS::EC2::EIPAssociation",
        "Properties": {
          "AllocationId": {
            "Fn::GetAtt": [
              "eip34246100215",
              "AllocationId"
            ]
          },
          "InstanceId": {
            "Ref": "instancei0986cb9e5080b9f22"
          }
        }
      },
      "ingress1": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgmscottautomate"
          },
          "IpProtocol": "tcp",
          "FromPort": "80",
          "ToPort": "80",
          "SourceSecurityGroupId": "sg-8e1046f4",
          "SourceSecurityGroupOwnerId": "510367013858"
        }
      },
      "ingress2": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgmscottautomate"
          },
          "IpProtocol": "tcp",
          "FromPort": "22",
          "ToPort": "22",
          "SourceSecurityGroupId": "sg-8e1046f4",
          "SourceSecurityGroupOwnerId": "510367013858"
        }
      },
      "ingress3": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgmscottautomate"
          },
          "IpProtocol": "tcp",
          "FromPort": "10000",
          "ToPort": "10003",
          "SourceSecurityGroupId": "sg-8e1046f4",
          "SourceSecurityGroupOwnerId": "510367013858"
        }
      },
      "ingress4": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgmscottautomate"
          },
          "IpProtocol": "tcp",
          "FromPort": "8443",
          "ToPort": "8443",
          "SourceSecurityGroupId": "sg-8e1046f4",
          "SourceSecurityGroupOwnerId": "510367013858"
        }
      },
      "ingress5": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgmscottautomate"
          },
          "IpProtocol": "tcp",
          "FromPort": "8989",
          "ToPort": "8989",
          "SourceSecurityGroupId": "sg-8e1046f4",
          "SourceSecurityGroupOwnerId": "510367013858"
        }
      },
      "ingress6": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgmscottautomate"
          },
          "IpProtocol": "tcp",
          "FromPort": "443",
          "ToPort": "443",
          "SourceSecurityGroupId": "sg-8e1046f4",
          "SourceSecurityGroupOwnerId": "510367013858"
        }
      },
      "ingress7": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgdefault"
          },
          "IpProtocol": "tcp",
          "FromPort": "80",
          "ToPort": "80",
          "CidrIp": "0.0.0.0/0"
        }
      },
      "ingress8": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgdefault"
          },
          "IpProtocol": "tcp",
          "FromPort": "10112",
          "ToPort": "10112",
          "CidrIp": "212.250.191.68/32"
        }
      },
      "ingress9": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgdefault"
          },
          "IpProtocol": "tcp",
          "FromPort": "10112",
          "ToPort": "10112",
          "CidrIp": "217.43.106.136/32"
        }
      },
      "ingress10": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgdefault"
          },
          "IpProtocol": "tcp",
          "FromPort": "10112",
          "ToPort": "10112",
          "CidrIp": "0.0.0.0/0"
        }
      },
      "ingress11": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgdefault"
          },
          "IpProtocol": "tcp",
          "FromPort": "10022",
          "ToPort": "10022",
          "CidrIp": "86.29.16.202/32"
        }
      },
      "ingress12": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgdefault"
          },
          "IpProtocol": "tcp",
          "FromPort": "10022",
          "ToPort": "10022",
          "CidrIp": "217.43.106.136/32"
        }
      },
      "ingress13": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgdefault"
          },
          "IpProtocol": "tcp",
          "FromPort": "10022",
          "ToPort": "10022",
          "CidrIp": "0.0.0.0/0"
        }
      },
      "ingress14": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgdefault"
          },
          "IpProtocol": "tcp",
          "FromPort": "22",
          "ToPort": "22",
          "CidrIp": "86.29.16.202/32"
        }
      },
      "ingress15": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgdefault"
          },
          "IpProtocol": "tcp",
          "FromPort": "22",
          "ToPort": "22",
          "CidrIp": "217.43.106.136/32"
        }
      },
      "ingress16": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgdefault"
          },
          "IpProtocol": "tcp",
          "FromPort": "22",
          "ToPort": "22",
          "CidrIp": "0.0.0.0/0"
        }
      },
      "ingress17": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgdefault"
          },
          "IpProtocol": "tcp",
          "FromPort": "10800",
          "ToPort": "10800",
          "CidrIp": "212.250.191.68/32"
        }
      },
      "ingress18": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgdefault"
          },
          "IpProtocol": "tcp",
          "FromPort": "10800",
          "ToPort": "10800",
          "CidrIp": "86.29.16.202/32"
        }
      },
      "ingress19": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgdefault"
          },
          "IpProtocol": "tcp",
          "FromPort": "10800",
          "ToPort": "10800",
          "CidrIp": "217.43.106.136/32"
        }
      },
      "ingress20": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgdefault"
          },
          "IpProtocol": "tcp",
          "FromPort": "10060",
          "ToPort": "10060",
          "CidrIp": "217.43.106.136/32"
        }
      },
      "ingress21": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgdefault"
          },
          "IpProtocol": "tcp",
          "FromPort": "10060",
          "ToPort": "10060",
          "CidrIp": "212.250.191.68/32"
        }
      },
      "ingress22": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgdefault"
          },
          "IpProtocol": "tcp",
          "FromPort": "10060",
          "ToPort": "10060",
          "CidrIp": "0.0.0.0/0"
        }
      },
      "ingress23": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgdefault"
          },
          "IpProtocol": "tcp",
          "FromPort": "10200",
          "ToPort": "10200",
          "CidrIp": "86.29.16.202/32"
        }
      },
      "ingress24": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgdefault"
          },
          "IpProtocol": "tcp",
          "FromPort": "10200",
          "ToPort": "10200",
          "CidrIp": "217.43.106.136/32"
        }
      },
      "ingress25": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgdefault"
          },
          "IpProtocol": "tcp",
          "FromPort": "10200",
          "ToPort": "10200",
          "CidrIp": "0.0.0.0/0"
        }
      },
      "ingress26": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgdefault"
          },
          "IpProtocol": "tcp",
          "FromPort": "10020",
          "ToPort": "10020",
          "CidrIp": "212.250.191.68/32"
        }
      },
      "ingress27": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgdefault"
          },
          "IpProtocol": "tcp",
          "FromPort": "10020",
          "ToPort": "10020",
          "CidrIp": "86.29.16.202/32"
        }
      },
      "ingress28": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgdefault"
          },
          "IpProtocol": "tcp",
          "FromPort": "10020",
          "ToPort": "10020",
          "CidrIp": "217.43.106.136/32"
        }
      },
      "ingress29": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgdefault"
          },
          "IpProtocol": "tcp",
          "FromPort": "18080",
          "ToPort": "18080",
          "CidrIp": "0.0.0.0/0"
        }
      },
      "ingress30": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgdefault"
          },
          "IpProtocol": "tcp",
          "FromPort": "443",
          "ToPort": "443",
          "CidrIp": "0.0.0.0/0"
        }
      },
      "ingress31": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgdefault"
          },
          "IpProtocol": "tcp",
          "FromPort": "10080",
          "ToPort": "10080",
          "CidrIp": "0.0.0.0/0"
        }
      },
      "ingress32": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgChefServer"
          },
          "IpProtocol": "tcp",
          "FromPort": "80",
          "ToPort": "80",
          "CidrIp": "172.17.2.0/24"
        }
      },
      "ingress33": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgChefServer"
          },
          "IpProtocol": "tcp",
          "FromPort": "80",
          "ToPort": "80",
          "CidrIp": "172.17.1.90/32"
        }
      },
      "ingress34": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgChefServer"
          },
          "IpProtocol": "tcp",
          "FromPort": "22",
          "ToPort": "22",
          "CidrIp": "172.17.2.0/24"
        }
      },
      "ingress35": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgChefServer"
          },
          "IpProtocol": "tcp",
          "FromPort": "22",
          "ToPort": "22",
          "CidrIp": "172.17.1.90/32"
        }
      },
      "ingress36": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgChefServer"
          },
          "IpProtocol": "tcp",
          "FromPort": "443",
          "ToPort": "443",
          "CidrIp": "172.17.2.0/24"
        }
      },
      "ingress37": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgChefServer"
          },
          "IpProtocol": "tcp",
          "FromPort": "443",
          "ToPort": "443",
          "CidrIp": "172.17.1.90/32"
        }
      },
      "ingress38": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgautomate2"
          },
          "IpProtocol": "tcp",
          "FromPort": "80",
          "ToPort": "80",
          "SourceSecurityGroupId": {
            "Ref": "sgdefault"
          },
          "SourceSecurityGroupOwnerId": "510367013858"
        }
      },
      "ingress39": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgautomate2"
          },
          "IpProtocol": "tcp",
          "FromPort": "80",
          "ToPort": "80",
          "CidrIp": "172.17.2.0/24"
        }
      },
      "ingress40": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgautomate2"
          },
          "IpProtocol": "tcp",
          "FromPort": "10022",
          "ToPort": "10022",
          "SourceSecurityGroupId": {
            "Ref": "sgdefault"
          },
          "SourceSecurityGroupOwnerId": "510367013858"
        }
      },
      "ingress41": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgautomate2"
          },
          "IpProtocol": "tcp",
          "FromPort": "22",
          "ToPort": "22",
          "SourceSecurityGroupId": {
            "Ref": "sgdefault"
          },
          "SourceSecurityGroupOwnerId": "510367013858"
        }
      },
      "ingress42": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgautomate2"
          },
          "IpProtocol": "tcp",
          "FromPort": "10000",
          "ToPort": "10003",
          "SourceSecurityGroupId": {
            "Ref": "sgdefault"
          },
          "SourceSecurityGroupOwnerId": "510367013858"
        }
      },
      "ingress43": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgautomate2"
          },
          "IpProtocol": "tcp",
          "FromPort": "10160",
          "ToPort": "10160",
          "CidrIp": "172.17.2.0/24"
        }
      },
      "ingress44": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgautomate2"
          },
          "IpProtocol": "tcp",
          "FromPort": "8989",
          "ToPort": "8989",
          "SourceSecurityGroupId": {
            "Ref": "sgdefault"
          },
          "SourceSecurityGroupOwnerId": "510367013858"
        }
      },
      "ingress45": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgautomate2"
          },
          "IpProtocol": "tcp",
          "FromPort": "443",
          "ToPort": "443",
          "SourceSecurityGroupId": {
            "Ref": "sgdefault"
          },
          "SourceSecurityGroupOwnerId": "510367013858"
        }
      },
      "ingress46": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgautomate2"
          },
          "IpProtocol": "tcp",
          "FromPort": "443",
          "ToPort": "443",
          "CidrIp": "172.17.2.0/24"
        }
      },
      "ingress47": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sga2nodes"
          },
          "IpProtocol": "tcp",
          "FromPort": "80",
          "ToPort": "80",
          "SourceSecurityGroupId": {
            "Ref": "sgdefault"
          },
          "SourceSecurityGroupOwnerId": "510367013858"
        }
      },
      "ingress48": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sga2nodes"
          },
          "IpProtocol": "tcp",
          "FromPort": "80",
          "ToPort": "80",
          "SourceSecurityGroupId": {
            "Ref": "sgautomate2"
          },
          "SourceSecurityGroupOwnerId": "510367013858"
        }
      },
      "ingress49": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sga2nodes"
          },
          "IpProtocol": "tcp",
          "FromPort": "80",
          "ToPort": "80",
          "CidrIp": "172.17.1.90/32"
        }
      },
      "ingress50": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sga2nodes"
          },
          "IpProtocol": "tcp",
          "FromPort": "8080",
          "ToPort": "8080",
          "CidrIp": "172.17.1.90/32"
        }
      },
      "ingress51": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sga2nodes"
          },
          "IpProtocol": "tcp",
          "FromPort": "8080",
          "ToPort": "8080",
          "CidrIp": "172.17.2.0/24"
        }
      },
      "ingress52": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sga2nodes"
          },
          "IpProtocol": "tcp",
          "FromPort": "22",
          "ToPort": "22",
          "SourceSecurityGroupId": {
            "Ref": "sgdefault"
          },
          "SourceSecurityGroupOwnerId": "510367013858"
        }
      },
      "ingress53": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sga2nodes"
          },
          "IpProtocol": "tcp",
          "FromPort": "22",
          "ToPort": "22",
          "SourceSecurityGroupId": {
            "Ref": "sgautomate2"
          },
          "SourceSecurityGroupOwnerId": "510367013858"
        }
      },
      "ingress54": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sga2nodes"
          },
          "IpProtocol": "tcp",
          "FromPort": "10800",
          "ToPort": "10800",
          "CidrIp": "172.17.1.90/32"
        }
      },
      "ingress55": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sga2nodes"
          },
          "IpProtocol": "tcp",
          "FromPort": "443",
          "ToPort": "443",
          "SourceSecurityGroupId": {
            "Ref": "sgdefault"
          },
          "SourceSecurityGroupOwnerId": "510367013858"
        }
      },
      "ingress56": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sga2nodes"
          },
          "IpProtocol": "tcp",
          "FromPort": "443",
          "ToPort": "443",
          "SourceSecurityGroupId": {
            "Ref": "sgChefServer"
          },
          "SourceSecurityGroupOwnerId": "510367013858"
        }
      },
      "ingress57": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sga2nodes"
          },
          "IpProtocol": "tcp",
          "FromPort": "443",
          "ToPort": "443",
          "CidrIp": "172.17.1.90/32"
        }
      },
      "ingress58": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgmscottnode"
          },
          "IpProtocol": "tcp",
          "FromPort": "80",
          "ToPort": "80",
          "CidrIp": "0.0.0.0/0"
        }
      },
      "ingress59": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgmscottnode"
          },
          "IpProtocol": "tcp",
          "FromPort": "22",
          "ToPort": "22",
          "CidrIp": "0.0.0.0/0"
        }
      },
      "ingress60": {
        "Type": "AWS::EC2::SecurityGroupIngress",
        "Properties": {
          "GroupId": {
            "Ref": "sgmscottnode"
          },
          "IpProtocol": "tcp",
          "FromPort": "443",
          "ToPort": "443",
          "CidrIp": "0.0.0.0/0"
        }
      },
      "egress1": {
        "Type": "AWS::EC2::SecurityGroupEgress",
        "Properties": {
          "GroupId": {
            "Ref": "sgmscottautomate"
          },
          "IpProtocol": "-1",
          "CidrIp": "0.0.0.0/0"
        }
      },
      "egress2": {
        "Type": "AWS::EC2::SecurityGroupEgress",
        "Properties": {
          "GroupId": {
            "Ref": "sgdefault"
          },
          "IpProtocol": "-1",
          "CidrIp": "0.0.0.0/0"
        }
      },
      "egress3": {
        "Type": "AWS::EC2::SecurityGroupEgress",
        "Properties": {
          "GroupId": {
            "Ref": "sgChefServer"
          },
          "IpProtocol": "-1",
          "CidrIp": "0.0.0.0/0"
        }
      },
      "egress4": {
        "Type": "AWS::EC2::SecurityGroupEgress",
        "Properties": {
          "GroupId": {
            "Ref": "sgautomate2"
          },
          "IpProtocol": "-1",
          "CidrIp": "0.0.0.0/0"
        }
      },
      "egress5": {
        "Type": "AWS::EC2::SecurityGroupEgress",
        "Properties": {
          "GroupId": {
            "Ref": "sga2nodes"
          },
          "IpProtocol": "-1",
          "CidrIp": "0.0.0.0/0"
        }
      },
      "egress6": {
        "Type": "AWS::EC2::SecurityGroupEgress",
        "Properties": {
          "GroupId": {
            "Ref": "sgmscottnode"
          },
          "IpProtocol": "-1",
          "CidrIp": "0.0.0.0/0"
        }
      }
    },
    "Description": "A template to deploy a Chef Automate 2 environment."
  }