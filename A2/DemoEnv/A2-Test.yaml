---
AWSTemplateFormatVersion: '2010-09-09'

Description: Chef Automate2 Deployment Template

## PARAMETERS SECTION ##

Parameters:

  Prefix:
    Description: Tag for all servers deployed in the Automate cluster
    Type: String
    Default: my-company

  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

  zCurrentUbuntu:
    Type: String
    Default: ami-405f7226
    Description: AMI ID for current Ubuntu - this is 16.04 LTS

  KeyName:
    Description: Name of an existing ec2 KeyPair to enable SSH access
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.

## RESOURCES SECTION ##

Resources:

# VPC creation #

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
      - Key: Name'
        Value: !Sub ${Prefix} Automate VPC

  # Subnets #
  SubnetDefault:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: eu-west-1a
      VpcId:
        Ref: VPC
      CidrBlock: 10.0.0.0/24
      Tags:
      - Key: Name
        Value: !Sub ${Prefix} Automate Subnet

  # IGs and access and associations #
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: !Sub ${Prefix} Automate Cluster IG
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: !Sub ${Prefix} Automate RouteTable
  Route:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId:
        Ref: RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
  SubnetRouteTableAssociationDefault:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: SubnetDefault
      RouteTableId:
        Ref: RouteTable

  AutomateServer:
    Type: AWS::EC2::Instance
    Properties: 
      InstanceType: t2.medium
      AvailabilityZone: eu-west-1a
      NetworkInterfaces:
      - GroupSet:
        - Ref: AutomateSecurityGroup
        AssociatePublicIpAddress: 'true'
        PrivateIpAddress: 10.0.0.4
        DeviceIndex: '0'
        DeleteOnTermination: 'true'
        SubnetId:
          Ref: SubnetDefault
      ImageId:
        Ref: zCurrentUbuntu
      KeyName:
        Ref: KeyName

  # Security group #
  AutomateSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:
        Ref: VPC
      GroupDescription: Enable required ports for Automate 
      SecurityGroupIngress:

      # SSH
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp:
          Ref: SSHLocation

        # RDP
      - IpProtocol: tcp
        FromPort: '3389'
        ToPort: '3389'
        CidrIp: 0.0.0.0/0

        # HTTPS
      - IpProtocol: tcp
        FromPort: '443'
        ToPort: '443'
        CidrIp: 0.0.0.0/0

      - IpProtocol: icmp
        FromPort: '8'
        ToPort: "-1"
        CidrIp: 0.0.0.0/0

      - IpProtocol: udp
        FromPort: '3389'
        ToPort: '3389'
        CidrIp: 0.0.0.0/0

        # WINRM
      - IpProtocol: tcp
        FromPort: '5985'
        ToPort: '5986'
        CidrIp: 0.0.0.0/0

        # Access to Etcd
      - IpProtocol: tcp
        FromPort: '4001'
        ToPort: '4001'
        CidrIp: 10.0.0.0/24
    